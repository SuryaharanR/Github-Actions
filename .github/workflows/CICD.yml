

name: CICD pipeline

on:
  push:
    branches: [ "main" ]
 

jobs:
  compile:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

  Security-Check:
        runs-on: ubuntu-latest
        needs: compile
        steps:
        - uses: actions/checkout@v4
        - name: Trivy Installation
          run: |
            sudo apt-get install wget apt-transport-https gnupg lsb-release
            wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
            echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
            sudo apt-get update -y
            sudo apt-get install trivy -y
            
        - name: Trivy Fs Scanning
          run: trivy fs --format table -o fs.report.json .

        - name: Gitleaks installation
          run: sudo apt install gitleaks -y

        - name: Gitleaks code Scan
          run: gitleaks detect source . -r gitleaks-report.json -f json

  test:
     runs-on: ubuntu-latest
     needs: Security-Check
     steps:
         - uses: actions/checkout@v4
         - name: Set up JDK 17
           uses: actions/setup-java@v4
           with:
                java-version: '17'
                distribution: 'temurin'
                cache: maven
         - name: Unit Test Cases
           run: mvn test

  Build-sonarqube-scan:
     runs-on: ubuntu-latest
     needs: test
     steps:
         - uses: actions/checkout@v4
         - name: Set up JDK 17
           uses: actions/setup-java@v4
           with:
                java-version: '17'
                distribution: 'temurin'
                cache: maven
         - name: build project
           run: mvn package



         - uses: actions/checkout@v4
           with:
        # Disabling shallow clones is recommended for improving the relevancy of reporting
             fetch-depth: 0
         - name: SonarQube Scan
           uses: SonarSource/sonarqube-scan-action@v5.2.0
          # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
           env:
             SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
             SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

           # Check the Quality Gate status.   
         - name: SonarQube Quality Gate check
           id: sonarqube-quality-gate-check
           uses: sonarsource/sonarqube-quality-gate-action@master
           with:
             pollingTimeoutSec: 600
           env:
             SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
             SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }} #OPTIONAL

  
